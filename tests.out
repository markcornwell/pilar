Petite Chez Scheme Version 8.4
Copyright (c) 1985-2011 Cadence Research Systems

> Performing cons tests ...
test 0:(fxadd1 0) ... ok
test 1:(pair? 12) ... ok
test 2:(pair? #t) ... ok
test 3:(pair? #f) ... ok
test 4:(pair? ()) ... ok
test 5:(cons 1 2) ... ok
test 6:(pair? (cons 1 2)) ... ok
test 7:(fixnum? (cons 12 43)) ... ok
test 8:(boolean? (cons 12 43)) ... ok
test 9:(null? (cons 12 43)) ... ok
test 10:(not (cons 12 43)) ... ok
test 11:(if (cons 12 43) 32 43) ... ok
test 12:(car (cons 1 23)) ... ok
test 13:(cdr (cons 43 123)) ... ok
test 14:(cons #t #f) ... ok
test 15:(car (cons #t #f)) ... ok
test 16:(cons 1 ()) ... ok
test 17:(cons 1 (cons 2 ())) ... ok
test 18:(cons (cons 12 3) (cons 45 6)) ... ok
test 19:(cons (cons 12 3) (cons #t #f)) ... ok
test 20:(car (car (cons (cons 12 3) (cons #t #f)))) ... ok
test 21:(cdr (car (cons (cons 12 3) (cons #t #f)))) ... ok
test 22:(car (cdr (cons (cons 12 3) (cons #t #f)))) ... ok
test 23:(cdr (cdr (cons (cons 12 3) (cons #t #f)))) ... ok
test 24:(cons 1 (cons 2 (cons 3 ()))) ... ok
test 25:(let ((x (let ((y (fx+ 1 2))) (fx* y y)))) (cons x (fx+ x x))) ... ok
test 26:(let ((t0 (cons 1 2)) (t1 (cons 3 4))) (let ((a0 (car t0)) (a1 (car t1)) (d0 (cdr t0)) (d1 (cdr t1))) (let ((t0 (cons a0 d1)) (t1 (cons a1 d0))) (cons t0 t1)))) ... ok
test 27:(let ((t (cons 1 2))) (let ((t t)) (let ((t t)) (let ((t t)) t)))) ... ok
test 28:(let ((t (let ((t (let ((t (let ((t (cons 1 2))) t))) t))) t))) t) ... ok
test 29:(let ((x ())) (let ((x (cons x x))) (let ((x (cons x x))) (let ((x (cons x x))) (cons x x))))) ... ok
test 30:(cons (let ((x #t)) (let ((y (cons x x))) (cons x y))) (cons (let ((x #f)) (let ((y (cons x x))) (cons y x))) ())) ... ok
Performing procedures tests ...
test 31:(letrec () 12) ... ok
test 32:(letrec () (let ((x 5)) (fx+ x x))) ... ok
test 33:(letrec ((f (lambda () 5))) 7) ... ok
test 34:(letrec ((f (lambda () 5))) (let ((x 12)) x)) ... ok
test 35:(letrec ((f (lambda () 5))) (app f)) ... ok
test 36:(letrec ((f (lambda () 5))) (f)) ... ok
test 37:(letrec ((f (lambda () 5))) (let ((x (f))) x)) ... ok
test 38:(letrec ((f (lambda () 5))) (fx+ 6 (app f))) ... ok
test 39:(letrec ((f (lambda () 5))) (fx+ (app f) 6)) ... ok
test 40:(letrec ((f (lambda () 5))) (fx+ (f) 6)) ... ok
test 41:(letrec ((f (lambda () 5))) (fx- 20 (f))) ... ok
test 42:(letrec ((f (lambda () 5))) (fx+ (f) (f))) ... ok
test 43:(letrec ((f (lambda () (fx+ 5 7))) (g (lambda () 13))) (fx+ (f) (g))) ... ok
test 44:(letrec ((f (lambda (x) (fx+ x 12)))) (f 13)) ... ok
test 45:(letrec ((f (lambda (x) (fx+ x 12)))) (f (f 10))) ... ok
test 46:(letrec ((f (lambda (x) (fx+ x 12)))) (f (f (f 0)))) ... ok
test 47:(letrec ((f (lambda (x y) (fx+ x y))) (g (lambda (x) (fx+ x 12)))) (f 16 (f (g 0) (fx+ 1 (g 0))))) ... ok
test 48:(letrec ((f (lambda (x) (g x x))) (g (lambda (x y) (fx+ x y)))) (f 12)) ... ok
test 49:(letrec ((f (lambda (x) (if (fxzero? x) 1 (fx* x (f (fxsub1 x))))))) (f 5)) ... ok
test 50:(letrec ((e (lambda (x) (if (fxzero? x) #t (o (fxsub1 x))))) (o (lambda (x) (if (fxzero? x) #f (e (fxsub1 x)))))) (e 25)) ... ok
Performing deeply nested procedures tests ...
test 51:(letrec ((sum (lambda (n ac) (if (fxzero? n) ac (app sum (fxsub1 n) (fx+ n ac)))))) (app sum 10000 0)) ... ok
test 52:(letrec ((e (lambda (x) (if (fxzero? x) #t (app o (fxsub1 x))))) (o (lambda (x) (if (fxzero? x) #f (app e (fxsub1 x)))))) (app e 5000000)) ... ok
Performing binary primitives tests ...
test 53:(fxlognot -7) ... ok
test 54:(fxlognot (fxlogor (fxlognot 7) 1)) ... ok
test 55:(fxlognot (fxlogor (fxlognot 7) (fxlognot 2))) ... ok
test 56:(fxlogand (fxlognot (fxlognot 12)) (fxlognot (fxlognot 12))) ... ok
test 57:(fx+ (fx+ 1 2) (fx+ 3 4)) ... ok
test 58:(fx+ (fx+ 1 2) (fx+ 3 -4)) ... ok
test 59:(fx+ (fx+ 1 2) (fx+ -3 4)) ... ok
test 60:(fx+ (fx+ 1 2) (fx+ -3 -4)) ... ok
test 61:(fx+ (fx+ 1 -2) (fx+ 3 4)) ... ok
test 62:(fx+ (fx+ 1 -2) (fx+ 3 -4)) ... ok
test 63:(fx+ (fx+ 1 -2) (fx+ -3 4)) ... ok
test 64:(fx+ (fx+ 1 -2) (fx+ -3 -4)) ... ok
test 65:(fx+ (fx+ -1 2) (fx+ 3 4)) ... ok
test 66:(fx+ (fx+ -1 2) (fx+ 3 -4)) ... ok
test 67:(fx+ (fx+ -1 2) (fx+ -3 4)) ... ok
test 68:(fx+ (fx+ -1 2) (fx+ -3 -4)) ... ok
test 69:(fx+ (fx+ -1 -2) (fx+ 3 4)) ... ok
test 70:(fx+ (fx+ -1 -2) (fx+ 3 -4)) ... ok
test 71:(fx+ (fx+ -1 -2) (fx+ -3 4)) ... ok
test 72:(fx+ (fx+ -1 -2) (fx+ -3 -4)) ... ok
test 73:(fx+ (fx+ (fx+ (fx+ (fx+ (fx+ (fx+ (fx+ 1 2) 3) 4) 5) 6) 7) 8) 9) ... ok
test 74:(fx+ 1 (fx+ 2 (fx+ 3 (fx+ 4 (fx+ 5 (fx+ 6 (fx+ 7 (fx+ 8 9)))))))) ... ok
test 75:(fx+ (fx+ (fx+ (fx+ 1 2) (fx+ 3 4)) (fx+ (fx+ 5 6) (fx+ 7 8))) (fx+ (fx+ (fx+ 9 10) (fx+ 11 12)) (fx+ (fx+ 13 14) (fx+ 15 16)))) ... ok
test 76:(fx- (fx- 1 2) (fx- 3 4)) ... ok
test 77:(fx- (fx- 1 2) (fx- 3 -4)) ... ok
test 78:(fx- (fx- 1 2) (fx- -3 4)) ... ok
test 79:(fx- (fx- 1 2) (fx- -3 -4)) ... ok
test 80:(fx- (fx- 1 -2) (fx- 3 4)) ... ok
test 81:(fx- (fx- 1 -2) (fx- 3 -4)) ... ok
test 82:(fx- (fx- 1 -2) (fx- -3 4)) ... ok
test 83:(fx- (fx- 1 -2) (fx- -3 -4)) ... ok
test 84:(fx- (fx- -1 2) (fx- 3 4)) ... ok
test 85:(fx- (fx- -1 2) (fx- 3 -4)) ... ok
test 86:(fx- (fx- -1 2) (fx- -3 4)) ... ok
test 87:(fx- (fx- -1 2) (fx- -3 -4)) ... ok
test 88:(fx- (fx- -1 -2) (fx- 3 4)) ... ok
test 89:(fx- (fx- -1 -2) (fx- 3 -4)) ... ok
test 90:(fx- (fx- -1 -2) (fx- -3 4)) ... ok
test 91:(fx- (fx- -1 -2) (fx- -3 -4)) ... ok
test 92:(fx- (fx- (fx- (fx- (fx- (fx- (fx- (fx- 1 2) 3) 4) 5) 6) 7) 8) 9) ... ok
test 93:(fx- 1 (fx- 2 (fx- 3 (fx- 4 (fx- 5 (fx- 6 (fx- 7 (fx- 8 9)))))))) ... ok
test 94:(fx- (fx- (fx- (fx- 1 2) (fx- 3 4)) (fx- (fx- 5 6) (fx- 7 8))) (fx- (fx- (fx- 9 10) (fx- 11 12)) (fx- (fx- 13 14) (fx- 15 16)))) ... ok
test 95:(fx* (fx* (fx* (fx* 2 3) (fx* 4 5)) (fx* (fx* 6 7) (fx* 8 9))) (fx* (fx* (fx* 2 3) (fx* 2 3)) (fx* (fx* 2 3) (fx* 2 3)))) ... ok
test 96:(fxlognot (fxlogor (fxlognot 7) 1)) ... ok
test 97:(fxlognot (fxlogor (fxlognot 7) (fxlognot 2))) ... ok
test 98:(fxlogand (fxlognot (fxlognot 12)) (fxlognot (fxlognot 12))) ... ok
test 99:(fx= (fx+ 13 3) (fx+ 10 6)) ... ok
test 100:(fx= (fx+ 13 0) (fx+ 10 6)) ... ok
test 101:(fx= (fx+ 12 1) (fx+ -12 -1)) ... ok
test 102:(fx< (fx+ 10 6) (fx+ 13 1)) ... ok
test 103:(fx< (fx+ 10 6) (fx+ 13 3)) ... ok
test 104:(fx< (fx+ 10 6) (fx+ 13 31)) ... ok
test 105:(fx< (fx+ 12 1) (fx+ -12 -1)) ... ok
test 106:(fx< (fx+ -12 -1) (fx+ 12 1)) ... ok
test 107:(fx<= (fx+ 10 6) (fx+ 13 1)) ... ok
test 108:(fx<= (fx+ 10 6) (fx+ 13 3)) ... ok
test 109:(fx<= (fx+ 10 6) (fx+ 13 31)) ... ok
test 110:(fx<= (fx+ 12 1) (fx+ -12 -1)) ... ok
test 111:(fx<= (fx+ -12 -1) (fx+ 12 1)) ... ok
test 112:(fx> (fx+ 10 6) (fx+ 13 1)) ... ok
test 113:(fx> (fx+ 10 6) (fx+ 13 3)) ... ok
test 114:(fx> (fx+ 10 6) (fx+ 13 31)) ... ok
test 115:(fx> (fx+ 12 1) (fx+ -12 -1)) ... ok
test 116:(fx> (fx+ -12 -1) (fx+ 12 1)) ... ok
test 117:(fx>= (fx+ 10 6) (fx+ 13 1)) ... ok
test 118:(fx>= (fx+ 10 6) (fx+ 13 3)) ... ok
test 119:(fx>= (fx+ 10 6) (fx+ 13 31)) ... ok
test 120:(fx>= (fx+ 12 1) (fx+ -12 -1)) ... ok
test 121:(fx>= (fx+ -12 -1) (fx+ 12 1)) ... ok
Performing let tests ...
test 122:(let ((x 5)) x) ... ok
test 123:(let ((x (fx+ 1 2))) x) ... ok
test 124:(let ((x (fx+ 1 2))) (let ((y (fx+ 3 4))) (fx+ x y))) ... ok
test 125:(let ((x (fx+ 1 2))) (let ((y (fx+ 3 4))) (fx- y x))) ... ok
test 126:(let ((x (fx+ 1 2)) (y (fx+ 3 4))) (fx- y x)) ... ok
test 127:(let ((x (let ((y (fx+ 1 2))) (fx* y y)))) (fx+ x x)) ... ok
test 128:(let ((x (fx+ 1 2))) (let ((x (fx+ 3 4))) x)) ... ok
test 129:(let ((x (fx+ 1 2))) (let ((x (fx+ x 4))) x)) ... ok
test 130:(let ((t (let ((t (let ((t (let ((t (fx+ 1 2))) t))) t))) t))) t) ... ok
test 131:(let ((x 12)) (let ((x (fx+ x x))) (let ((x (fx+ x x))) (let ((x (fx+ x x))) (fx+ x x))))) ... ok
Performing let* tests ...
test 132:(let* ((x 5)) x) ... ok
test 133:(let ((x 1)) (let ((x (fx+ x 1)) (y (fx+ x 1))) y)) ... ok
test 134:(let* ((x 1)) (let* ((x (fx+ x 1)) (y (fx+ x 1))) y)) ... ok
Performing fx+ tests ...
test 135:(fx+ 1 2) ... ok
test 136:(fx+ 1 -2) ... ok
test 137:(fx+ -1 2) ... ok
test 138:(fx+ -1 -2) ... ok
test 139:(fx+ 536870911 -1) ... ok
test 140:(fx+ 536870910 1) ... ok
test 141:(fx+ -536870912 1) ... ok
test 142:(fx+ -536870911 -1) ... ok
test 143:(fx+ 536870911 -536870912) ... ok
test 144:(fx+ 1 (fx+ 2 3)) ... ok
test 145:(fx+ 1 (fx+ 2 -3)) ... ok
test 146:(fx+ 1 (fx+ -2 3)) ... ok
test 147:(fx+ 1 (fx+ -2 -3)) ... ok
test 148:(fx+ -1 (fx+ 2 3)) ... ok
test 149:(fx+ -1 (fx+ 2 -3)) ... ok
test 150:(fx+ -1 (fx+ -2 3)) ... ok
test 151:(fx+ -1 (fx+ -2 -3)) ... ok
test 152:(fx+ (fx+ 1 2) 3) ... ok
test 153:(fx+ (fx+ 1 2) -3) ... ok
test 154:(fx+ (fx+ 1 -2) 3) ... ok
test 155:(fx+ (fx+ 1 -2) -3) ... ok
test 156:(fx+ (fx+ -1 2) 3) ... ok
test 157:(fx+ (fx+ -1 2) -3) ... ok
test 158:(fx+ (fx+ -1 -2) 3) ... ok
test 159:(fx+ (fx+ -1 -2) -3) ... ok
test 160:(fx+ (fx+ (fx+ (fx+ (fx+ (fx+ (fx+ (fx+ 1 2) 3) 4) 5) 6) 7) 8) 9) ... ok
test 161:(fx+ 1 (fx+ 2 (fx+ 3 (fx+ 4 (fx+ 5 (fx+ 6 (fx+ 7 (fx+ 8 9)))))))) ... ok
Performing fx- tests ...
test 162:(fx- 1 2) ... ok
test 163:(fx- 1 -2) ... ok
test 164:(fx- -1 2) ... ok
test 165:(fx- -1 -2) ... ok
test 166:(fx- 536870910 -1) ... ok
test 167:(fx- 536870911 1) ... ok
test 168:(fx- -536870911 1) ... ok
test 169:(fx- -536870912 -1) ... ok
test 170:(fx- 1 536870911) ... ok
test 171:(fx- -1 536870911) ... ok
test 172:(fx- 1 -536870910) ... ok
test 173:(fx- -1 -536870912) ... ok
test 174:(fx- 536870911 536870911) ... ok
test 175:(fx- -536870911 -536870912) ... ok
test 176:(fx- 1 (fx- 2 3)) ... ok
test 177:(fx- 1 (fx- 2 -3)) ... ok
test 178:(fx- 1 (fx- -2 3)) ... ok
test 179:(fx- 1 (fx- -2 -3)) ... ok
test 180:(fx- -1 (fx- 2 3)) ... ok
test 181:(fx- -1 (fx- 2 -3)) ... ok
test 182:(fx- -1 (fx- -2 3)) ... ok
test 183:(fx- -1 (fx- -2 -3)) ... ok
test 184:(fx- 0 (fx- -2 -3)) ... ok
test 185:(fx- (fx- 1 2) 3) ... ok
test 186:(fx- (fx- 1 2) -3) ... ok
test 187:(fx- (fx- 1 -2) 3) ... ok
test 188:(fx- (fx- 1 -2) -3) ... ok
test 189:(fx- (fx- -1 2) 3) ... ok
test 190:(fx- (fx- -1 2) -3) ... ok
test 191:(fx- (fx- -1 -2) 3) ... ok
test 192:(fx- (fx- -1 -2) -3) ... ok
test 193:(fx- (fx- (fx- (fx- (fx- (fx- (fx- (fx- 1 2) 3) 4) 5) 6) 7) 8) 9) ... ok
test 194:(fx- 1 (fx- 2 (fx- 3 (fx- 4 (fx- 5 (fx- 6 (fx- 7 (fx- 8 9)))))))) ... ok
Performing fx* tests ...
test 195:(fx* 2 3) ... ok
test 196:(fx* 2 -3) ... ok
test 197:(fx* -2 3) ... ok
test 198:(fx* -2 -3) ... ok
test 199:(fx* 536870911 1) ... ok
test 200:(fx* 536870911 -1) ... ok
test 201:(fx* -536870912 1) ... ok
test 202:(fx* -536870911 -1) ... ok
test 203:(fx* 2 (fx* 3 4)) ... ok
test 204:(fx* (fx* 2 3) 4) ... ok
test 205:(fx* (fx* (fx* (fx* (fx* 2 3) 4) 5) 6) 7) ... ok
test 206:(fx* 2 (fx* 3 (fx* 4 (fx* 5 (fx* 6 7))))) ... ok
Performing fxlogand and fxlogor tests ...
test 207:(fxlogor 3 16) ... ok
test 208:(fxlogor 3 5) ... ok
test 209:(fxlogor 3 7) ... ok
test 210:(fxlognot (fxlogor (fxlognot 7) 1)) ... ok
test 211:(fxlognot (fxlogor 1 (fxlognot 7))) ... ok
test 212:(fxlogand 3 7) ... ok
test 213:(fxlogand 3 5) ... ok
test 214:(fxlogand 2346 (fxlognot 2346)) ... ok
test 215:(fxlogand (fxlognot 2346) 2346) ... ok
test 216:(fxlogand 2376 2376) ... ok
Performing fx= tests ...
test 217:(fx= 12 13) ... ok
test 218:(fx= 12 12) ... ok
test 219:(fx= 16 (fx+ 13 3)) ... ok
test 220:(fx= 16 (fx+ 13 13)) ... ok
test 221:(fx= (fx+ 13 3) 16) ... ok
test 222:(fx= (fx+ 13 13) 16) ... ok
Performing fx< tests ...
test 223:(fx< 12 13) ... ok
test 224:(fx< 12 12) ... ok
test 225:(fx< 13 12) ... ok
test 226:(fx< 16 (fx+ 13 1)) ... ok
test 227:(fx< 16 (fx+ 13 3)) ... ok
test 228:(fx< 16 (fx+ 13 13)) ... ok
test 229:(fx< (fx+ 13 1) 16) ... ok
test 230:(fx< (fx+ 13 3) 16) ... ok
test 231:(fx< (fx+ 13 13) 16) ... ok
Performing fx<= tests ...
test 232:(fx<= 12 13) ... ok
test 233:(fx<= 12 12) ... ok
test 234:(fx<= 13 12) ... ok
test 235:(fx<= 16 (fx+ 13 1)) ... ok
test 236:(fx<= 16 (fx+ 13 3)) ... ok
test 237:(fx<= 16 (fx+ 13 13)) ... ok
test 238:(fx<= (fx+ 13 1) 16) ... ok
test 239:(fx<= (fx+ 13 3) 16) ... ok
test 240:(fx<= (fx+ 13 13) 16) ... ok
Performing fx> tests ...
test 241:(fx> 12 13) ... ok
test 242:(fx> 12 12) ... ok
test 243:(fx> 13 12) ... ok
test 244:(fx> 16 (fx+ 13 1)) ... ok
test 245:(fx> 16 (fx+ 13 3)) ... ok
test 246:(fx> 16 (fx+ 13 13)) ... ok
test 247:(fx> (fx+ 13 1) 16) ... ok
test 248:(fx> (fx+ 13 3) 16) ... ok
test 249:(fx> (fx+ 13 13) 16) ... ok
Performing fx>= tests ...
test 250:(fx>= 12 13) ... ok
test 251:(fx>= 12 12) ... ok
test 252:(fx>= 13 12) ... ok
test 253:(fx>= 16 (fx+ 13 1)) ... ok
test 254:(fx>= 16 (fx+ 13 3)) ... ok
test 255:(fx>= 16 (fx+ 13 13)) ... ok
test 256:(fx>= (fx+ 13 1) 16) ... ok
test 257:(fx>= (fx+ 13 3) 16) ... ok
test 258:(fx>= (fx+ 13 13) 16) ... ok
Performing if tests ...
test 259:(if (fx= 12 13) 12 13) ... ok
test 260:(if (fx= 12 12) 13 14) ... ok
test 261:(if (fx< 12 13) 12 13) ... ok
test 262:(if (fx< 12 12) 13 14) ... ok
test 263:(if (fx< 13 12) 13 14) ... ok
test 264:(if (fx<= 12 13) 12 13) ... ok
test 265:(if (fx<= 12 12) 12 13) ... ok
test 266:(if (fx<= 13 12) 13 14) ... ok
test 267:(if (fx> 12 13) 12 13) ... ok
test 268:(if (fx> 12 12) 12 13) ... ok
test 269:(if (fx> 13 12) 13 14) ... ok
test 270:(if (fx>= 12 13) 12 13) ... ok
test 271:(if (fx>= 12 12) 12 13) ... ok
test 272:(if (fx>= 13 12) 13 14) ... ok
Performing if tests ...
test 273:(if #t 12 13) ... ok
test 274:(if #f 12 13) ... ok
test 275:(if 0 12 13) ... ok
test 276:(if () 43 ()) ... ok
test 277:(if #t (if 12 13 4) 17) ... ok
test 278:(if #f 12 (if #f 13 4)) ... ok
test 279:(if #\X (if 1 2 3) (if 4 5 6)) ... ok
test 280:(if (not (boolean? #t)) 15 (boolean? #f)) ... ok
test 281:(if (if (char? #\a) (boolean? #\b) (fixnum? #\c)) 119 -23) ... ok
test 282:(if (if (if (not 1) (not 2) (not 3)) 4 5) 6 7) ... ok
test 283:(if (not (if (if (not 1) (not 2) (not 3)) 4 5)) 6 7) ... ok
test 284:(not (if (not (if (if (not 1) (not 2) (not 3)) 4 5)) 6 7)) ... ok
test 285:(if (char? 12) 13 14) ... ok
test 286:(if (char? #\a) 13 14) ... ok
test 287:(fxadd1 (if (fxsub1 1) (fxsub1 13) 14)) ... ok
Performing and tests ...
test 288:(and) ... ok
test 289:(and #t) ... ok
test 290:(and #f) ... ok
test 291:(and #t #t) ... ok
test 292:(and #t #f) ... ok
test 293:(and #t #t #t) ... ok
test 294:(and #t #t #t #t #t #t #t) ... ok
test 295:(and #t #t #t #f #t #t #t) ... ok
test 296:(and (char? 12) (boolean? #f)) ... ok
test 297:(and (char? #\a) (boolean? #f)) ... ok
test 298:(and (char? #\newline) (not #f)) ... ok
test 299:(and (char? #\newline) (not #f) (not ())) ... ok
Performing or tests ...
test 300:(or) ... ok
test 301:(or #t) ... ok
test 302:(or #f) ... ok
test 303:(or #t #f) ... ok
test 304:(or #f #t) ... ok
test 305:(or #f #f #f #f #f #f #f #f #f #f #f #t) ... ok
test 306:(or #f #f #f #f #f (char? 14) (boolean? #\a)) ... ok
test 307:(and (or (char? 12) (char? #\a)) (or (boolean? 13) (boolean? #f))) ... ok
test 308:(or (char? #\a) (boolean? #f)) ... ok
Performing fxadd1 tests ...
test 309:(fxadd1 0) ... ok
test 310:(fxadd1 -1) ... ok
test 311:(fxadd1 1) ... ok
test 312:(fxadd1 -100) ... ok
test 313:(fxadd1 1000) ... ok
test 314:(fxadd1 536870910) ... ok
test 315:(fxadd1 -536870912) ... ok
test 316:(fxadd1 (fxadd1 0)) ... ok
test 317:(fxadd1 (fxadd1 (fxadd1 (fxadd1 (fxadd1 (fxadd1 12)))))) ... ok
Performing fixnum->char and char->fixnum tests ...
test 318:(fixnum->char 65) ... ok
test 319:(fixnum->char 97) ... ok
test 320:(fixnum->char 122) ... ok
test 321:(fixnum->char 90) ... ok
test 322:(fixnum->char 48) ... ok
test 323:(fixnum->char 57) ... ok
test 324:(char->fixnum #\A) ... ok
test 325:(char->fixnum #\a) ... ok
test 326:(char->fixnum #\z) ... ok
test 327:(char->fixnum #\Z) ... ok
test 328:(char->fixnum #\0) ... ok
test 329:(char->fixnum #\9) ... ok
test 330:(char->fixnum (fixnum->char 12)) ... ok
test 331:(fixnum->char (char->fixnum #\x)) ... ok
Performing fixnum? tests ...
test 332:(fixnum? 0) ... ok
test 333:(fixnum? 1) ... ok
test 334:(fixnum? -1) ... ok
test 335:(fixnum? 37287) ... ok
test 336:(fixnum? -23873) ... ok
test 337:(fixnum? 536870911) ... ok
test 338:(fixnum? -536870912) ... ok
test 339:(fixnum? #t) ... ok
test 340:(fixnum? #f) ... ok
test 341:(fixnum? ()) ... ok
test 342:(fixnum? #\Q) ... ok
test 343:(fixnum? (fixnum? 12)) ... ok
test 344:(fixnum? (fixnum? #f)) ... ok
test 345:(fixnum? (fixnum? #\A)) ... ok
test 346:(fixnum? (char->fixnum #\r)) ... ok
test 347:(fixnum? (fixnum->char 12)) ... ok
Performing fxzero? tests ...
test 348:(fxzero? 0) ... ok
test 349:(fxzero? 1) ... ok
test 350:(fxzero? -1) ... ok
Performing null? tests ...
test 351:(null? ()) ... ok
test 352:(null? #f) ... ok
test 353:(null? #t) ... ok
test 354:(null? (null? ())) ... ok
test 355:(null? #\a) ... ok
test 356:(null? 0) ... ok
test 357:(null? -10) ... ok
test 358:(null? 10) ... ok
Performing boolean? tests ...
test 359:(boolean? #t) ... ok
test 360:(boolean? #f) ... ok
test 361:(boolean? 0) ... ok
test 362:(boolean? 1) ... ok
test 363:(boolean? -1) ... ok
test 364:(boolean? ()) ... ok
test 365:(boolean? #\a) ... ok
test 366:(boolean? (boolean? 0)) ... ok
test 367:(boolean? (fixnum? (boolean? 0))) ... ok
Performing char? tests ...
test 368:(char? #\a) ... ok
test 369:(char? #\Z) ... ok
test 370:(char? #\newline) ... ok
test 371:(char? #t) ... ok
test 372:(char? #f) ... ok
test 373:(char? ()) ... ok
test 374:(char? (char? #t)) ... ok
test 375:(char? 0) ... ok
test 376:(char? 23870) ... ok
test 377:(char? -23789) ... ok
Performing not tests ...
test 378:(not #t) ... ok
test 379:(not #f) ... ok
test 380:(not 15) ... ok
test 381:(not ()) ... ok
test 382:(not #\A) ... ok
test 383:(not (not #t)) ... ok
test 384:(not (not #f)) ... ok
test 385:(not (not 15)) ... ok
test 386:(not (fixnum? 15)) ... ok
test 387:(not (fixnum? #f)) ... ok
Performing fxlognot tests ...
test 388:(fxlognot 0) ... ok
test 389:(fxlognot -1) ... ok
test 390:(fxlognot 1) ... ok
test 391:(fxlognot -2) ... ok
test 392:(fxlognot 536870911) ... ok
test 393:(fxlognot -536870912) ... ok
test 394:(fxlognot (fxlognot 237463)) ... ok
Performing immediate constants tests ...
test 395:#f ... ok
test 396:#t ... ok
test 397:() ... ok
test 398:#\tab ... ok
test 399:#\newline ... ok
test 400:#\return ... ok
test 401:#\space ... ok
test 402:#\! ... ok
test 403:#\" ... ok
test 404:#\# ... ok
test 405:#\$ ... ok
test 406:#\% ... ok
test 407:#\& ... ok
test 408:#\' ... ok
test 409:#\( ... ok
test 410:#\) ... ok
test 411:#\* ... ok
test 412:#\+ ... ok
test 413:#\, ... ok
test 414:#\- ... ok
test 415:#\. ... ok
test 416:#\/ ... ok
test 417:#\0 ... ok
test 418:#\1 ... ok
test 419:#\2 ... ok
test 420:#\3 ... ok
test 421:#\4 ... ok
test 422:#\5 ... ok
test 423:#\6 ... ok
test 424:#\7 ... ok
test 425:#\8 ... ok
test 426:#\9 ... ok
test 427:#\: ... ok
test 428:#\; ... ok
test 429:#\< ... ok
test 430:#\= ... ok
test 431:#\> ... ok
test 432:#\? ... ok
test 433:#\@ ... ok
test 434:#\A ... ok
test 435:#\B ... ok
test 436:#\C ... ok
test 437:#\D ... ok
test 438:#\E ... ok
test 439:#\F ... ok
test 440:#\G ... ok
test 441:#\H ... ok
test 442:#\I ... ok
test 443:#\J ... ok
test 444:#\K ... ok
test 445:#\L ... ok
test 446:#\M ... ok
test 447:#\N ... ok
test 448:#\O ... ok
test 449:#\P ... ok
test 450:#\Q ... ok
test 451:#\R ... ok
test 452:#\S ... ok
test 453:#\T ... ok
test 454:#\U ... ok
test 455:#\V ... ok
test 456:#\W ... ok
test 457:#\X ... ok
test 458:#\Y ... ok
test 459:#\Z ... ok
test 460:#\[ ... ok
test 461:#\\ ... ok
test 462:#\] ... ok
test 463:#\^ ... ok
test 464:#\_ ... ok
test 465:#\` ... ok
test 466:#\a ... ok
test 467:#\b ... ok
test 468:#\c ... ok
test 469:#\d ... ok
test 470:#\e ... ok
test 471:#\f ... ok
test 472:#\g ... ok
test 473:#\h ... ok
test 474:#\i ... ok
test 475:#\j ... ok
test 476:#\k ... ok
test 477:#\l ... ok
test 478:#\m ... ok
test 479:#\n ... ok
test 480:#\o ... ok
test 481:#\p ... ok
test 482:#\q ... ok
test 483:#\r ... ok
test 484:#\s ... ok
test 485:#\t ... ok
test 486:#\u ... ok
test 487:#\v ... ok
test 488:#\w ... ok
test 489:#\x ... ok
test 490:#\y ... ok
test 491:#\z ... ok
test 492:#\{ ... ok
test 493:#\| ... ok
test 494:#\} ... ok
test 495:#\~ ... ok
Performing integers tests ...
test 496:0 ... ok
test 497:1 ... ok
test 498:-1 ... ok
test 499:10 ... ok
test 500:-10 ... ok
test 501:2736 ... ok
test 502:-2736 ... ok
test 503:536870911 ... ok
test 504:-536870912 ... ok
passed all 505 tests
> 
